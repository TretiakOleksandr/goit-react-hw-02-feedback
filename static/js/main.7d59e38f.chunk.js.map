{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/NotificationMessage/NotificationMessage.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css"],"names":["Section","title","children","Controls","goodClick","neutralClick","badClick","className","type","s","controlBtn","onClick","Statistics","good","neutral","bad","total","positivePercentage","results","NotificationMessage","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","FeedbackOptions","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6QAWeA,EATC,SAAC,GAAD,IACZC,EADY,EACZA,MAAOC,EADK,EACLA,SADK,OAGd,qCACE,6BAAKD,IACJC,M,gBCUUC,EAdE,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,SAA5B,OACf,sBAAKC,UAAU,WAAf,UACE,wBAAQC,KAAK,SAASD,UAAWE,IAAEC,WAAYC,QAASP,EAAxD,kBAGA,wBAAQI,KAAK,SAASD,UAAWE,IAAEC,WAAYC,QAASN,EAAxD,qBAGA,wBAAQG,KAAK,SAASD,UAAWE,IAAEC,WAAYC,QAASL,EAAxD,qB,gBCEWM,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,sBAAKV,UAAWE,IAAES,QAAlB,UACE,uBAAMX,UAAU,SAAhB,mBAAgCM,KAChC,uBAAMN,UAAU,SAAhB,sBAAmCO,KACnC,uBAAMP,UAAU,SAAhB,kBAA+BQ,KAC/B,uBAAMR,UAAU,SAAhB,oBAAiCS,KACjC,uBAAMT,UAAU,SAAhB,gCAA6CU,EAA7C,YCNWE,EAFa,kBAAM,oDCgEnBC,G,kNAzDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPX,UAAY,WACV,EAAKkB,UAAS,SAACC,GAAD,MAAgB,CAAEV,KAAMU,EAAUV,KAAO,O,EAGzDR,aAAe,WACb,EAAKiB,UAAS,SAACC,GAAD,MAAgB,CAAET,QAASS,EAAUT,QAAU,O,EAG/DR,SAAW,WACT,EAAKgB,UAAS,SAACC,GAAD,MAAgB,CAAER,IAAKQ,EAAUR,IAAM,O,EAGvDS,mBAAqB,WACnB,MAA+B,EAAKH,MACpC,OADA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBU,gCAAkC,WAChC,OAA2B,IAAlB,EAAKJ,MAAMR,KAAc,EAAKW,sBAAsBE,QAAQ,I,4CAGvE,WACE,MAA+BC,KAAKN,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,gCACE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACE,cAAC2B,EAAD,CACExB,UAAWuB,KAAKvB,UAChBC,aAAcsB,KAAKtB,aACnBC,SAAUqB,KAAKrB,aAInB,cAAC,EAAD,CAASL,MAAM,aAAf,SACiC,IAA9B0B,KAAKH,qBACJ,cAAC,EAAD,IAEA,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,KAAKH,qBACZP,mBAAoBU,KAAKF,6C,GAjDrBI,cCKHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,WAAa,sC,kBCA/BD,EAAOC,QAAU,CAAC,QAAU,+B","file":"static/js/main.7d59e38f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Section = (\n  { title, children } // children є складовою props взагалі\n) => (\n  <>\n    <h1>{title}</h1>\n    {children}\n  </>\n);\n\nexport default Section;\n","import React from \"react\";\nimport s from \"../FeedbackOptions/FeedbackOptions.module.css\";\n\nconst Controls = ({ goodClick, neutralClick, badClick }) => (\n  <div className=\"controls\">\n    <button type=\"button\" className={s.controlBtn} onClick={goodClick}>\n      Good\n    </button>\n    <button type=\"button\" className={s.controlBtn} onClick={neutralClick}>\n      Neutral\n    </button>\n    <button type=\"button\" className={s.controlBtn} onClick={badClick}>\n      Bad\n    </button>\n  </div>\n);\n\nexport default Controls;\n","import React from \"react\";\nimport s from \"../Statistics/Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={s.results}>\n    <span className=\"result\">Good: {good}</span>\n    <span className=\"result\">Neutral: {neutral}</span>\n    <span className=\"result\">Bad: {bad}</span>\n    <span className=\"result\">Total: {total}</span>\n    <span className=\"result\">Positive feedback: {positivePercentage} %</span>\n  </div>\n);\n\nexport default Statistics;\n","import React from \"react\";\nconst NotificationMessage = () => <h2>No feedback given</h2>;\n\nexport default NotificationMessage;\n","import { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport NotificationMessage from \"./components/NotificationMessage/NotificationMessage\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  goodClick = () => {\n    this.setState((prevState) => ({ good: prevState.good + 1 }));\n  };\n\n  neutralClick = () => {\n    this.setState((prevState) => ({ neutral: prevState.neutral + 1 }));\n  };\n\n  badClick = () => {\n    this.setState((prevState) => ({ bad: prevState.bad + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return ((this.state.good * 100) / this.countTotalFeedback()).toFixed(2);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            goodClick={this.goodClick}\n            neutralClick={this.neutralClick}\n            badClick={this.badClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <NotificationMessage />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlBtn\":\"FeedbackOptions_controlBtn__2xB3P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"Statistics_results__2GIX1\"};"],"sourceRoot":""}